#!/usr/bin/env ruby
def check(key)
  cache_file = "tmp/.#{key}"
  if File.exists?(cache_file)
    old_version = File.read(cache_file)
  else
    old_version = nil
  end
 
  version = yield(old_version)
  File.open(cache_file, 'w') { |f| f.puts(version || 'cached') }
end


 
check(:gemfile) do |old_version|
  # check both Gemfile and Gemfile.lock as there might be local changes that hasn't been bundled yet
  version = File.read("Gemfile") + File.read("Gemfile.lock")
  if version != old_version
    puts "Gemfile changed, bundling."
    system("bundle 1> /dev/null") || exit(1)
  end
  version
end

if not File.exists?("Guardfile")
  puts "Guard file not initialized, initilizing"
  system("guard init > /dev/null") || exit(1)
end

# puts "Start server"
# system("rails server > /dev/null") || exit(1)


 
# check(:schema) do |old_version|
#   version = File.readlines("db/schema.rb").find { |line| line.include?("define(:version") }
#   if version != old_version
#    puts "Schema changed, updating databases."
#    system("rake db:migrate") || exit(1)
#   end
#   version
# end
